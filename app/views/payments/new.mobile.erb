<%= form_for @payment do |f| %>

  <ul data-role="listview" data-inset="true" data-theme"a">
    <li data-role="list-divider" data-theme='a'>Giving To</li>  
    <li data-icon='info'>
      <%= link_to "#{receiving_fund.name}", fund_path(receiving_fund) %>
    </li>    
  </ul>

  <ul data-role="listview" data-inset="true" data-theme"a">
    
    <li style='margin:0px;padding:0px;'>
      <div class='ui-grid-a pr-s pl'>
        <div class='ui-block-a' style='margin-top:18px;font-size:14px'>Amount:</div>
        <div class='ui-block-b'>
          <div><%= f.select :amount, [['$ 2', 200], ['$ 5', 500], ['$ 10', 1000], ['Other', 'other']], { :selected => 500 }, :'data-mini' => false, :'data-native-menu' => 'false', :'data-id' => 'payment_amount' %></div>
        </div>  
      </div>
    </li>
    <li style='margin:0px;padding:0px;'>
        <div class='ui-grid-a pl pr-m'>
          <div class='ui-block-a' style='margin-top:15px;font-size:14px'>Anonymous:</div>
          <div class='ui-block-b' style='text-align:right;'>
            <%= f.select :is_anonymous, [['No',false],["Yes",true]], {}, :'data-role' => 'slider', :'data-theme' => 'c' %>
          </div>  
        </div>
      </li>
    
    <li style='margin:0px;padding:8px;'>
      <%= f.text_field :message, :'placeholder' => 'Optional Message', :'data-mini' => true, :'data-theme' => 'b' %>    
    </li>
  </ul>

  <ul data-role="listview" data-inset="true" data-theme"a">
    
    
      <% payment_card = current_user.payment_cards.first rescue nil %>

      <% if user_signed_in? and payment_card.present? %>
        <li>
          <%= "#{payment_card.card_type} Ending in #{payment_card.last_4_digits}" %>
        </li>
      <% else %>
        <li id='payment_card_list_item'>
          <a href='#new_payment_card_form' data-rel="popup">Setup Payment Info</a>
        </li>

        <%= fields_for :payment_card_used do |c| %>
          <%= c.hidden_field :uri %>
        <% end %>

      <% end %>
    
    
  </ul>
  
  <%= f.hidden_field :fund_id %>
  
  <div class='ui-grid-full'>
    <%= f.submit "Give Now", :'data-role' => 'button', :'data-theme' => 'b', :'data-icon' => 'check' %>
  </div>

<% end %>

<%= render :partial => 'users/payment_cards/new', :formats => [:mobile] %>
<%= render :partial => 'payments/custom_amount_form', :formats => [:mobile] %>



<script type='text/javascript'>

  var current_page_id = '<%= current_page_id %>';
  var current_page = $('#'+current_page_id);
  

  $('#custom_amount_value').initAutoNumeric();

  current_page.on( 'pageinit', function() {    

    $("#payment_amount-listbox").on('click', function(){
      $('#payment_amount').data('previous_value', $(this).val());
    });

    $('#payment_amount-listbox').on( "popupafterclose", function( event, ui ) {
      var target = $('#payment_amount');
      if (target.val() == 'other'){
        target.val(target.data('previous_value'));
        target.selectmenu( "refresh" );
        window.setTimeout ( function() { 
          $('#custom_amount_popup').popup('open'); 
        }, 300 );
      }
    });

    if ('ontouchstart' in document.documentElement) {
      $('.custom_amount_button').on('touchstart', custom_amount_button_press);
      $('#custom_amount_ok_button').on('click', custom_amount_ok_button_press);
    } else {
      $('.custom_amount_button').on('click', custom_amount_button_press);
      $('#custom_amount_ok_button').on('click', custom_amount_ok_button_press);    
    } 

  });
  
  function custom_amount_button_press() {
    var target = $('#custom_amount_value');
    var source_button = $(this);
    if (source_button.data('value') == 'clear'){
      target.autoNumeric('set', 0);
    } else if(source_button.data('value') == 'backspace') {
      var current_value = parseInt(target.val().autoNumeric('get'));
      var new_value = parseInt(current_value / 10);
      target.autoNumeric('set', new_value);
    } else {
      var current_value = parseInt(target.autoNumeric('get'));
      var new_value = current_value * 10 + parseInt($(this).data('value'));
      target.autoNumeric('set', new_value);
    }
  }

  function custom_amount_ok_button_press() {

    var value_text  = $('#custom_amount_value').html();
    var value_value = $('#custom_amount_value').autoNumeric('get') * 100; 
    if ($('#payment_amount option').length == 5 ) {
      $('#payment_amount option:eq(3)').remove();
    } 
    var index_to_insert_before = $('#payment_amount option').length - 1;
    $("#payment_amount option:eq(" + index_to_insert_before + ")").before("<option value=" + value_value + ">" + value_text + "</option>");  
    $('#payment_amount').val(value_value);
    $('#payment_amount').selectmenu( "refresh" );
    //$('.ui-popup-screen.in').trigger('click');
    $('#custom_amount_popup').popup('close');
  }

  function balancedAddCardCallback(response) {
    var tag = (response.status < 300) ? 'pre' : 'code';
    debug(tag, JSON.stringify(response));
    switch (response.status) {
      case 201:
        $('#payment_card_used_uri').val(response.data.uri);                               
        $('#payment_card_list_item').find('.ui-btn-text a').html(response.data.brand + ' ending in ' + response.data.last_four);
        $("#new_payment_card_form").popup("close");
        window.setTimeout ( function() {                  
          flashNow('Your card was successfully validated', 'notice');
        }, 500 );
        break;
      case 400:
      case 403: // missing/malformed data - check response.error for details
        $("#new_payment_card_form").popup("close");
        var error_message = '<h3>Could not validate your card</h3>';
        $.each( response.error, function( key, value ) {
          error_message += ( key + ": " + "is not valid" + "<br/>");
        });
        error_message += "<p>Please try again...</p>";
        window.setTimeout ( function() {                  
          flashNow(error_message, 'error');
        }, 500 );                
      case 402: // we couldn't authorize the buyer's credit card - check response.error for details
        $("#new_payment_card_form").popup("close");
        var error_message = '<h3>Could not validate your card</h3><p>The card entered was declined</p><p>Please try another card...</p>';
        window.setTimeout ( function() {                  
          flashNow(error_message, 'error');
        }, 500 );
        break;
      case 404: // your marketplace URI is incorrect
        break;
      default: // we did something unexpected - check response.error for details
        break;
    }
  }

</script>
